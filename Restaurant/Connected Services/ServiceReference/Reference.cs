//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Restaurant.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Select_ID", ReplyAction="http://tempuri.org/IService1/Select_IDResponse")]
        string Select_ID(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Select_ID", ReplyAction="http://tempuri.org/IService1/Select_IDResponse")]
        System.Threading.Tasks.Task<string> Select_IDAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Select_Role", ReplyAction="http://tempuri.org/IService1/Select_RoleResponse")]
        string Select_Role(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Select_Role", ReplyAction="http://tempuri.org/IService1/Select_RoleResponse")]
        System.Threading.Tasks.Task<string> Select_RoleAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Exist_User", ReplyAction="http://tempuri.org/IService1/Exist_UserResponse")]
        string Exist_User(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Exist_User", ReplyAction="http://tempuri.org/IService1/Exist_UserResponse")]
        System.Threading.Tasks.Task<string> Exist_UserAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Exist_UserWithPass", ReplyAction="http://tempuri.org/IService1/Exist_UserWithPassResponse")]
        string Exist_UserWithPass(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Exist_UserWithPass", ReplyAction="http://tempuri.org/IService1/Exist_UserWithPassResponse")]
        System.Threading.Tasks.Task<string> Exist_UserWithPassAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_visitor", ReplyAction="http://tempuri.org/IService1/Update_visitorResponse")]
        void Update_visitor(string login, string password, string f_name, string m_name, string l_name, string phone, string role, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_visitor", ReplyAction="http://tempuri.org/IService1/Update_visitorResponse")]
        System.Threading.Tasks.Task Update_visitorAsync(string login, string password, string f_name, string m_name, string l_name, string phone, string role, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Select_visitor", ReplyAction="http://tempuri.org/IService1/Select_visitorResponse")]
        string[] Select_visitor(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Select_visitor", ReplyAction="http://tempuri.org/IService1/Select_visitorResponse")]
        System.Threading.Tasks.Task<string[]> Select_visitorAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Delete_visitor", ReplyAction="http://tempuri.org/IService1/Delete_visitorResponse")]
        void Delete_visitor(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Delete_visitor", ReplyAction="http://tempuri.org/IService1/Delete_visitorResponse")]
        System.Threading.Tasks.Task Delete_visitorAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Restaurant.ServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Restaurant.ServiceReference.IService1>, Restaurant.ServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Select_ID(string login) {
            return base.Channel.Select_ID(login);
        }
        
        public System.Threading.Tasks.Task<string> Select_IDAsync(string login) {
            return base.Channel.Select_IDAsync(login);
        }
        
        public string Select_Role(string login) {
            return base.Channel.Select_Role(login);
        }
        
        public System.Threading.Tasks.Task<string> Select_RoleAsync(string login) {
            return base.Channel.Select_RoleAsync(login);
        }
        
        public string Exist_User(string login) {
            return base.Channel.Exist_User(login);
        }
        
        public System.Threading.Tasks.Task<string> Exist_UserAsync(string login) {
            return base.Channel.Exist_UserAsync(login);
        }
        
        public string Exist_UserWithPass(string login, string password) {
            return base.Channel.Exist_UserWithPass(login, password);
        }
        
        public System.Threading.Tasks.Task<string> Exist_UserWithPassAsync(string login, string password) {
            return base.Channel.Exist_UserWithPassAsync(login, password);
        }
        
        public void Update_visitor(string login, string password, string f_name, string m_name, string l_name, string phone, string role, string id) {
            base.Channel.Update_visitor(login, password, f_name, m_name, l_name, phone, role, id);
        }
        
        public System.Threading.Tasks.Task Update_visitorAsync(string login, string password, string f_name, string m_name, string l_name, string phone, string role, string id) {
            return base.Channel.Update_visitorAsync(login, password, f_name, m_name, l_name, phone, role, id);
        }
        
        public string[] Select_visitor(string id) {
            return base.Channel.Select_visitor(id);
        }
        
        public System.Threading.Tasks.Task<string[]> Select_visitorAsync(string id) {
            return base.Channel.Select_visitorAsync(id);
        }
        
        public void Delete_visitor(string id) {
            base.Channel.Delete_visitor(id);
        }
        
        public System.Threading.Tasks.Task Delete_visitorAsync(string id) {
            return base.Channel.Delete_visitorAsync(id);
        }
    }
}
